
<!-- saved from url=(1081)https://piazza-resources.s3.amazonaws.com/jqsdh4th7et3gg/jrtbb8q46w150n/Coding2.html?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAR6AWVCBX3WQCJFYE%2F20190207%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20190207T155532Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Security-Token=FQoGZXIvYXdzEOz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDMMyOEcPN3v7iuCu2yK3A%2Bk9sg%2F98CANuB%2BkWcXuPxPaVGYV%2B8e7x6R2T13ZNeoTTYuUUsbF0mqPick6LvJpLiVw4RxUwhNFalXx4QzxdZ%2FNFIiaRNETnPDxmgJsrzmr%2BMl6V06DDhWkAw7wcD9zTCq0xIgZAch9dH0%2FqPZEdCW7dD3V05QV3N%2BsESdC%2F%2FuffKp%2F0KoyIE1q3Vh2AeZz1RdKxiCbHP42lEpr8B2fBmc1Ye5cXU11vR5mDXJmqiCMxDXY2kHw4KtDdPZ2VL2JMbdYsDbbUqpeanEOkTspunbStBSNkeriqDbzSUmNXjtp5CVwsTLuToIXc8qDV9klldECxOcPnNiMMeYDELo293oaH%2BrmWR50ON2W7pDJyUcj0hyVP9zFmkola0MxH0FvwZ06yJnbiLwcINxShIXlUo4IQJUR9SoNyN9d2cygVW%2B6G%2Fjg3mookM36JM7fb%2Bb5hZrmUIMD6m9RPuT6UQFlzE%2FKJ8dTYcEerRfVyWs0T9hXuHXe3N%2FkdXgHfe%2Ff94RHwyd%2BynFthtfYyfP42rUHEp2fZ58wOSc7xLLu2NAXR%2FzetDo%2FN9H6tr0YOpUBPaovBQh7CjcAoSIo85fw4gU%3D&X-Amz-Signature=705893276b177d028838a92857e4317dcb59ee26677a7f700d74ec989636bd73 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252"> 
<title> Stat 542 Coding Assignment 2</title> 

<style type="text/css"> 
body {
 margin-right: 50px;
 margin-left: 50px;
 margin-top: auto;
 width: 680px;
 font-size: 14px;
 font-family: Verdana, Eyechart, Geneve, Arial, Helvetica, sans-serif;
 color: black;
 background-color: #FFFFDE;
}

h2 {
/*font-family: Georgia, "MS Serif", "New York", serif; */
    font-family: Georgia, "Times New Roman", Times, serif;
    font-variant: small-caps;
    color: #aa3300;
}

h4 {
    font-family: Georgia, "Times New Roman", Times, serif;
    color: #003366;
    font-variant: small-caps;
    font-weight: bold;
    font-size: 16px;
}

h3 {
    font-family: Georgia, "Times New Roman", Times, serif;
    color: #aa3300;
    font-variant: small-caps;
    font-weight: bold;
    font-size: 18px;
}
big {
 font-size: larger;
}                                 

small {
 font-family: times;
 font-size: 10pt;
    }


a:link {
background: transparent;
color : #ff6600;
text-decoration : none;
}
a:visited {
background: transparent;
color: #ff6600;
text-decoration : underline;
}

a:hover {
background: transparent;
color: #999999;
text-decoration : underline;
}

a:active {
background: transparent;
color: #ff6600;
text-decoration : underline;
}

pre {
display: block; 
   font-family: "courier new", courier, monospace;
background-color: EBECE4;
xwidth = 60%;
}
</style>


</head>
<body>

<hr>

<h4><span style="color: #aa3300;"> Coding Assignment 2: Coordinate Descent for Lasso </span> </h4>


You are asked to implement Lasso using Coordinate Descent and apply your algorithm on the Boston housing data. 



<ul>
<li> First, prepare the Boston Housing Data. Check [Rcode_W3_VarSel_RidgeLasso.html] on relevant background information.

<pre>
library(MASS)
library(glmnet)
myData = Boston
names(myData)[14] = "Y"
iLog = c(1, 3, 5, 6, 8, 9, 10, 14);
myData[, iLog] = log(myData[, iLog]);
myData[, 2] = myData[, 2] / 10;
myData[, 7] = myData[, 7]^2.5 / 10^4
myData[, 11] = exp(0.4 * myData[, 11]) / 1000;
myData[, 12] = myData[, 12] / 100;
myData[, 13] = sqrt(myData[, 13]);

X = as.matrix(myData[, -14])
y = myData$Y

lam.seq = c(0.30, 0.2, 0.1, 0.05, 0.02, 0.005)

</pre>


</li><li> Next write your own function to implement CD, which should output estimated Lasso coefficients similar to the one output by R. 

<pre>
MyLasso = function(X, y, lam.seq, maxit = 50, standardize = TRUE){
  # X: n-by-p design matrix without the intercept
  # y: n-by-1 response vector
  # lam.seq: sequence of lambda values
  # maxit: number of updates for each lambda
  # standardize: if True, center and scale X and y. 

  n = length(y)
  p = dim(X)[2]
  nlam = length(lam.seq)
  
  if(standardize==TRUE){
    # YOUR CODE
    # Center and scale X and y
    # Record the corresponding means and scales
  }
  
  # Initilize coef vector b and residual vector r
  b = rep(0, p)
  r = y
  
  # Triple nested loop
  for(m in 1:nlam){
    lam = XXX # assign lambda value
    for(step in 1:maxit){
      for(j in 1:p){
  
        r = r + (X[,j]*b[j])
        b[j] = one_step_lasso(r, X[, j], lam)
        r = r - X[, j] * b[j]
  
      }
    }
    B[m, -1] = b
  }

  if(standardize==TRUE){
      # YOUR CODE
      # scale back the coefficients and update the intercepts B[, 1]
  }
  return(t(B))
}
</pre>

<b>Note</b>: You need to write your own function to solve the one-step Lasso for beta_j, see page 37 of [lec_W4_Regression.pdf]. 

<pre>
one_step_lasso = function(r, x, lam){
  
  # YOUR CODE
}
</pre>


in the script above, we run a fixed number of steps. maxit = 50 seems enough for this dataset.  You could set it to be a bigger number, or you can change it to a "while" loop to stop when some covergence criterion is satisified. <br><br>

</li><li> Check the accuracy of your algorithm against the output from glmnet. 

<pre>
lam.seq = c(0.30, 0.2, 0.1, 0.05, 0.02, 0.005)
lasso.fit = glmnet(X, y, alpha = 1, lambda = lam.seq)
coef(lasso.fit)

myout = MyLasso(X, y, lam.seq, maxit = 50)
rownames(myout) = c("Intercept", colnames(X))
myout

</pre>

The maximum difference between the two coefficient matrices should be less than <font color="red">0.005</font>. 

<pre> max(abs(coef(lasso.fit) - myout))
</pre>

</li><li> <b>What you need to submit? </b><br><br>

Before the deadline (<font color="blue">Friday, Feb 22, 3AM</font>) please submit your <span style="text-decoration: underline;">R Markdown</span> file and the  <span style="text-decoration: underline;">corresponding PDF</span> file.  <br><br>

Name your files starting with <font color="red">Assignment_2_xxxx_netID</font> where "xxxx" is the last 4-dig of your University ID.
</li></ul>



<hr>



</body></html>